{"version":3,"sources":["actions/actionTypes.js","App.js","actions/contactAction.js","reportWebVitals.js","reducers/index.js","reducers/contactReducer.js","index.js","store/configureStore.js"],"names":["CREATE_NEW_CONTACT","REMOVE_CONTACT","App","props","handleChange","bind","handleSubmit","deleteContact","state","name","e","this","setState","target","value","preventDefault","contact","createContact","data","index","className","onClick","onSubmit","type","onChange","contacts","map","i","listView","Component","connect","ownProps","dispatch","id","actionTypes","contactAction","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","combineReducers","action","Object","assign","filter","initialState","store","createStore","rootReducer","ReactDOM","render","document","getElementById"],"mappings":"0OACaA,EAAqB,qBACrBC,EAAiB,iB,OCExBC,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBACrB,EAAKG,MAAQ,CACXC,KAAM,IANQ,E,gDAUlB,SAAaC,GACXC,KAAKC,SAAS,CACZH,KAAMC,EAAEG,OAAOC,U,0BAInB,SAAaJ,GACXA,EAAEK,iBACF,IAAIC,EAAU,CACZP,KAAME,KAAKH,MAAMC,MAEnBE,KAAKR,MAAMc,cAAcD,GACzBL,KAAKC,SAAS,CAACH,KAAM,O,sBAEvB,SAASS,EAAMC,GAAO,IAAD,OACnB,OACE,sBAAKC,UAAY,kBAAjB,UACE,qBAAKA,UAAU,YAAf,SACE,oBAAgBA,UAAY,2BAA5B,SACGF,EAAKT,MADCU,KAIX,qBAAKC,UAAY,WAAjB,SACE,wBAAQC,QAAW,SAACX,GAAD,OAAO,EAAKH,cAAcG,EAAGS,IAAQC,UAAY,iBAApE,2B,2BAQR,SAAcV,EAAGS,GACfT,EAAEK,iBACFJ,KAAKR,MAAMI,cAAcY,K,oBAG3B,WAAS,IAAD,OAEN,OACE,sBAAKC,UAAU,YAAf,UACE,iEACA,uBACA,gCACE,kDACA,uBAAME,SAAUX,KAAKL,aAArB,UACE,uBAAOiB,KAAK,OAAOH,UAAY,eAAeI,SAAYb,KAAKP,aAAcU,MAASH,KAAKH,MAAMC,OACjG,uBAAOc,KAAK,SAASH,UAAY,kBAAkBN,MAAQ,QAEvD,oBAAIM,UAAY,aAAhB,SACGT,KAAKR,MAAMsB,SAASC,KAAI,SAACV,EAASW,GAAV,OAAgB,EAAKC,SAASZ,EAASW,qB,GA5DhEE,aAkFHC,eAZS,SAACtB,EAAOuB,GAC9B,MAAO,CACLN,SAAUjB,EAAMiB,aAIO,SAACO,GAC1B,MAAO,CACLzB,cAAe,SAAA0B,GAAE,OAAID,EC1EI,SAACC,GAC1B,MAAO,CACHV,KAAMW,EACND,MDuE0BE,CAA4BF,KAC1DhB,cAAe,SAAAD,GAAO,OAAIgB,ECjFD,SAAChB,GAC1B,MAAO,CACHO,KAAMW,EACNlB,WD8E+BmB,CAA4BnB,QAGpDc,CAA6C5B,GE1E7CkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCJCQ,cAAgB,CAC3BpB,SCFW,WAAyB,IAAxBjB,EAAuB,uDAAf,GAAIsC,EAAW,uCACnC,OAAOA,EAAOvB,MACV,KAAKW,EACD,MAAM,GAAN,mBACO1B,GADP,CAEIuC,OAAOC,OAAO,GAAGF,EAAO9B,WAEhC,KAAKkB,EAED,OAAO1B,EAAMyC,QAAO,SAAC/B,EAAMS,GAAP,OAAamB,EAAOb,KAAON,KACnD,QACI,OAAOnB,MCLnB,ICNuC0C,EDMjCC,ECLKC,YAAYC,EAAaH,GDMpCI,IAASC,OACP,cAAC,IAAD,CAAUJ,MAASA,EAAnB,SACE,cAAC,EAAD,MAGFK,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.7f992000.chunk.js","sourcesContent":["export const GET_ALL_CONTACTS = \"GET_ALL_CONTACTS\"\r\nexport const CREATE_NEW_CONTACT = \"CREATE_NEW_CONTACT\"\r\nexport const REMOVE_CONTACT = \"REMOVE_CONTACT\"\r\n","import React, {Component} from \"react\"\nimport {connect} from \"react-redux\"\nimport * as contactAction from \"./actions/contactAction\"\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.deleteContact = this.deleteContact.bind(this)\n    this.state = {\n      name: \"\"\n    }\n  }\n\n  handleChange(e){\n    this.setState({\n      name: e.target.value\n    })\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    let contact = {\n      name: this.state.name\n    }\n    this.props.createContact(contact)\n    this.setState({name: \"\"})\n  }\n  listView(data, index){\n    return (\n      <div className = \"row list-object\">\n        <div className=\"col-md-10\">\n          <li key={index} className = \"list-group-item clearfix\">\n            {data.name}\n          </li>\n        </div>\n        <div className = \"col-md-2\">\n          <button onClick = {(e) => this.deleteContact(e, index)} className = \"btn btn-danger\">\n            Remove\n          </button>\n        </div>\n      </div>\n    )\n  }\n\n  deleteContact(e, index){\n    e.preventDefault();\n    this.props.deleteContact(index)\n  }\n\n  render(){\n    \n    return (\n      <div className=\"container\">\n        <h1>Clientside Contacts Application</h1>\n        <hr/>\n        <div>\n          <h3>Add Contact Form</h3>\n          <form onSubmit={this.handleSubmit} >\n            <input type=\"text\" className = \"form-control\" onChange = {this.handleChange} value = {this.state.name}/>\n            <input type=\"submit\" className = \"btn btn-success\" value = \"ADD\"/>\n              {\n                <ul className = \"list-group\">\n                  {this.props.contacts.map((contact, i) => this.listView(contact, i))}\n                </ul>\n              }\n          </form>\n        </div>        \n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n  return {\n    contacts: state.contacts\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    deleteContact: id => dispatch(contactAction.deleteContact(id)),\n    createContact: contact => dispatch(contactAction.createContact(contact))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import * as actionTypes from \"./actionTypes\"\r\n\r\nexport const createContact = (contact) => {\r\n    return {\r\n        type: actionTypes.CREATE_NEW_CONTACT,\r\n        contact\r\n    }\r\n}\r\nexport const deleteContact = (id) => {\r\n    return {\r\n        type: actionTypes.REMOVE_CONTACT,\r\n        id\r\n    }\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {combineReducers} from \"redux\"\r\nimport contacts from \"./contactReducer\"\r\n\r\nexport default combineReducers({\r\n    contacts\r\n})","import * as actionTypes from \"../actions/actionTypes\"\r\n\r\nexport default (state = [], action) => {\r\n    switch(action.type){\r\n        case actionTypes.CREATE_NEW_CONTACT:\r\n            return [\r\n                ...state, \r\n                Object.assign({},action.contact)\r\n            ];\r\n        case actionTypes.REMOVE_CONTACT:\r\n            //remove items if they are the same id as one in action\r\n            return state.filter((data, i) => action.id !== i)\r\n        default: \r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\"\nimport configureStore from \"./store/configureStore\"\n\nconst store = configureStore() \nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {createStore} from \"redux\"\r\nimport rootReducer from \"../reducers\"\r\nexport default function configureStore(initialState){\r\n    return createStore(rootReducer, initialState);\r\n}"],"sourceRoot":""}